{"version":3,"sources":["components/FeedbackOptions/FeedbackOptions.js","components/Notification/Notification.js","components/Section/Section.js","components/Statistic/Statistic.js","data/AnswerOptions.js","App.js","index.js","components/FeedbackOptions/FeedbackOption.module.css","components/Notification/Notification.module.css","components/Section/Section.module.css"],"names":["FeedbackOptions","options","onLeaveFeedback","map","option","className","S","btn","type","name","onClick","Notification","message","notification","Section","title","children","feedback","Statistic","good","neutral","bad","total","positivePercentage","ANSWER_OPTIONS","App","useState","setGood","setNeutral","setBad","countTotalFeedback","e","target","prevState","Math","round","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"kOAwBeA,EArBS,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,gBAAZ,OACtB,mCACGD,EAAQE,KAAI,SAACC,GAAD,OACX,wBAEEC,UAAWC,IAAEC,IACbC,KAAK,SACLC,KAAML,EACNM,QAASR,EALX,SAOGE,GANIA,S,gBCIEO,EARM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACnB,mBAAGP,UAAWC,IAAEO,aAAhB,SAA+BD,K,gBCUlBE,EAXC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACd,0BAASX,UAAWC,IAAEW,SAAtB,UACE,6BAAKF,IACJC,MCcUE,EAlBG,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,mBAA9B,OAChB,qCACE,uCAAUJ,KACV,0CAAaC,KACb,sCAASC,KACT,wCAAWC,KACX,oDAAuBC,EAAvB,WCRSC,EAAiB,CAAC,OAAQ,UAAW,OCOnC,SAASC,IACtB,MAAwBC,mBAAS,GAAjC,mBAAOP,EAAP,KAAaQ,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAON,EAAP,KAAgBQ,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAOL,EAAP,KAAYQ,EAAZ,KAEMC,EAAqB,WAEzB,OADcX,EAAOC,EAAUC,GAyBjC,OACE,gCACE,cAAC,EAAD,CAASN,MAAM,wBAAf,SACE,cAAC,EAAD,CACEd,QAASuB,EACTtB,gBAtBuB,SAAC6B,GAC9B,OAAQA,EAAEC,OAAOvB,MACf,IAAK,OACHkB,GAAQ,SAACM,GAAD,OAAeA,EAAY,KACnC,MACF,IAAK,UACHL,GAAW,SAACK,GAAD,OAAeA,EAAY,KACtC,MACF,IAAK,MACHJ,GAAO,SAACI,GAAD,OAAeA,EAAY,KAClC,MAEF,QACE,aAaF,eAAC,EAAD,CAASlB,MAAM,YAAf,UAC4B,IAAzBe,KACC,cAAC,EAAD,CAAclB,QAAQ,sBAEE,IAAzBkB,KACC,cAAC,EAAD,CACEX,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOQ,IACPP,mBAvCDW,KAAKC,MAAOhB,EAAOW,IAAwB,aCdtDM,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACb,EAAD,MAEFc,SAASC,eAAe,U,kBCP1BC,EAAOC,QAAU,CAAC,IAAM,8B,kBCAxBD,EAAOC,QAAU,CAAC,aAAe,qC,kBCAjCD,EAAOC,QAAU,CAAC,SAAW,6B","file":"static/js/main.dfc15b10.chunk.js","sourcesContent":["import PropTypes from \"prop-types\";\r\nimport S from \"./FeedbackOption.module.css\";\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => (\r\n  <>\r\n    {options.map((option) => (\r\n      <button\r\n        key={option}\r\n        className={S.btn}\r\n        type=\"button\"\r\n        name={option}\r\n        onClick={onLeaveFeedback}\r\n      >\r\n        {option}\r\n      </button>\r\n    ))}\r\n  </>\r\n);\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.arrayOf(PropTypes.string.isRequired),\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import PropTypes from \"prop-types\";\r\nimport S from \"./Notification.module.css\";\r\n\r\nconst Notification = ({ message }) => (\r\n  <p className={S.notification}>{message}</p>\r\n);\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Notification;\r\n","import PropTypes from \"prop-types\";\r\nimport S from \"./Section.module.css\";\r\n\r\nconst Section = ({ title, children }) => (\r\n  <section className={S.feedback}>\r\n    <h2>{title}</h2>\r\n    {children}\r\n  </section>\r\n);\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Section;\r\n","import PropTypes from \"prop-types\";\r\n\r\nconst Statistic = ({ good, neutral, bad, total, positivePercentage }) => (\r\n  <>\r\n    <p>Good: {good}</p>\r\n    <p>Neutral: {neutral}</p>\r\n    <p>Bad: {bad}</p>\r\n    <p>Total: {total}</p>\r\n    <p>Positive feedback: {positivePercentage}%</p>\r\n  </>\r\n);\r\n\r\nStatistic.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Statistic;\r\n","export const ANSWER_OPTIONS = [\"good\", \"neutral\", \"bad\"];\r\n","import { useState } from \"react\";\nimport FeedbackOptions from \"./components/FeedbackOptions\";\nimport Notification from \"./components/Notification\";\nimport Section from \"./components/Section\";\nimport Statistic from \"./components/Statistic\";\nimport { ANSWER_OPTIONS } from \"./data/AnswerOptions\";\n\nexport default function App() {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const countTotalFeedback = () => {\n    const total = good + neutral + bad;\n    return total;\n  };\n\n  const countPositiveFeedbackPercentage = () => {\n    return Math.round((good / countTotalFeedback()) * 100);\n  };\n\n  const handleChangeStatistics = (e) => {\n    switch (e.target.name) {\n      case \"good\":\n        setGood((prevState) => prevState + 1);\n        break;\n      case \"neutral\":\n        setNeutral((prevState) => prevState + 1);\n        break;\n      case \"bad\":\n        setBad((prevState) => prevState + 1);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  return (\n    <div>\n      <Section title=\"Please leave feedback\">\n        <FeedbackOptions\n          options={ANSWER_OPTIONS}\n          onLeaveFeedback={handleChangeStatistics}\n        />\n      </Section>\n\n      <Section title=\"Statistic\">\n        {countTotalFeedback() === 0 && (\n          <Notification message=\"No feedback given\" />\n        )}\n        {countTotalFeedback() !== 0 && (\n          <Statistic\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={countTotalFeedback()}\n            positivePercentage={countPositiveFeedbackPercentage()}\n          />\n        )}\n      </Section>\n    </div>\n  );\n}\n\n// --OLD CODE--\n\n// class App extends Component {\n//   state = {\n//     good: 0,\n//     neutral: 0,\n//     bad: 0,\n//   };\n\n//   handleClick = (e) => {\n//     const name = e.target.name;\n//     this.setState((state) => ({ ...state, [name]: this.state[name] + 1 }));\n//   };\n\n//   countTotalFeedback = () =>\n//     this.state.good + this.state.bad + this.state.neutral;\n\n//   countPositiveFeedbackPercentage = () =>\n//     this.state.good\n//       ? Math.round((this.state.good / this.countTotalFeedback()) * 100)\n//       : 0;\n\n//   render() {\n//     const { good, neutral, bad } = this.state;\n//     return (\n//       <div>\n//         <Section title=\"Please leave feedback\">\n//           <FeedbackOptions\n//             options={Object.keys(this.state)}\n//             onLeaveFeedback={this.handleClick}\n//           />\n//         </Section>\n\n//         {this.countTotalFeedback() ? (\n//           <Section title=\"Statistic\">\n//             <Statistic\n//               good={good}\n//               neutral={neutral}\n//               bad={bad}\n//               total={this.countTotalFeedback()}\n//               positivePercentage={this.countPositiveFeedbackPercentage()}\n//             />\n//           </Section>\n//         ) : (\n//           <Notification message=\"No feedback given\" />\n//         )}\n//       </div>\n//     );\n//   }\n// }\n\n// export default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"FeedbackOption_btn__3Xgsc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"Notification_notification__34Amo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"feedback\":\"Section_feedback__3vfHy\"};"],"sourceRoot":""}